#########################################################################
# SECCI√ìN 2: VERIFICACI√ìN DE SALUD Y SERVICIOS INICIALES
#########################################################################

### 1. Verificar salud del servicio
GET {{baseUrl}}/api/v1/services/health
Authorization: {{authToken}}
Content-Type: application/json

###

### 2. Obtener todos los servicios (debe estar vac√≠o inicialmente)
# @name getAllServices
GET {{baseUrl}}/api/v1/services
Authorization: {{authToken}}
Content-Type: application/json

###

### 3. Buscar servicio por ID (debe retornar 404 para servicio inexistente)
GET {{baseUrl}}/api/v1/services/550e8400-e29b-41d4-a716-446655440000
Authorization: {{authToken}}
Content-Type: application/json

###

#########################################################################
# SECCI√ìN 3: CREAR SERVICIOS EN EL MARKETPLACE
#########################################################################

### 4. Crear primer servicio - Desarrollo Web
# @name createWebService
POST {{baseUrl}}/api/v1/services
Authorization: {{authToken}}
Content-Type: application/json

{
  "title": "Desarrollo Web Profesional",
  "description": "Servicios de desarrollo web usando tecnolog√≠as modernas como React, Angular y Vue.js",
  "price": 299.99,
  "category": "TECHNOLOGY",
  "providerId": "550e8400-e29b-41d4-a716-446655440001",
  "isActive": true,
  "averageRating": 4.5
}

###

### 5. Crear segundo servicio - Desarrollo M√≥vil
# @name createMobileService
POST {{baseUrl}}/api/v1/services
Authorization: {{authToken}}
Content-Type: application/json

{
  "title": "Desarrollo de Apps M√≥viles",
  "description": "Desarrollo de aplicaciones nativas y multiplataforma para iOS y Android",
  "price": 499.99,
  "category": "TECHNOLOGY", 
  "providerId": "550e8400-e29b-41d4-a716-446655440002",
  "isActive": true,
  "averageRating": 4.8
}

###

### 6. Crear tercer servicio - Consultor√≠a IT
# @name createConsultingService
POST {{baseUrl}}/api/v1/services
Authorization: {{authToken}}
Content-Type: application/json

{
  "title": "Consultor√≠a en Tecnolog√≠a",
  "description": "Asesoramiento especializado en arquitectura de software y transformaci√≥n digital",
  "price": 150.00,
  "category": "BUSINESS",
  "providerId": "550e8400-e29b-41d4-a716-446655440003",
  "isActive": true,
  "averageRating": 4.9
}

###

### 7. Verificar servicios creados
# @name servicesAfterCreation
GET {{baseUrl}}/api/v1/services
Authorization: {{authToken}}
Content-Type: application/json

###

#########################################################################
# SECCI√ìN 4: OBTENER SERVICIOS ESPEC√çFICOS
#########################################################################

### 8. Obtener servicio web por ID
GET {{baseUrl}}/api/v1/services/{{createWebService.response.body.id}}
Authorization: {{authToken}}
Content-Type: application/json

###

### 9. Obtener servicio m√≥vil por ID
GET {{baseUrl}}/api/v1/services/{{createMobileService.response.body.id}}
Authorization: {{authToken}}
Content-Type: application/json

###

### 10. Obtener servicio de consultor√≠a por ID
GET {{baseUrl}}/api/v1/services/{{createConsultingService.response.body.id}}
Authorization: {{authToken}}
Content-Type: application/json

###

#########################################################################
# SECCI√ìN 5: ACTUALIZAR SERVICIOS
#########################################################################

### 11. Actualizar precio y descripci√≥n del servicio web
# @name updateWebService
PUT {{baseUrl}}/api/v1/services/{{createWebService.response.body.id}}
Authorization: {{authToken}}
Content-Type: application/json

{
  "title": "Desarrollo Web Profesional - ACTUALIZADO",
  "description": "Servicios premium de desarrollo web con tecnolog√≠as de √∫ltima generaci√≥n y soporte completo",
  "price": 349.99,
  "category": "TECHNOLOGY",
  "providerId": "550e8400-e29b-41d4-a716-446655440001",
  "isActive": true,
  "averageRating": 4.7
}

###

### 12. Actualizar servicio m√≥vil para incluir m√°s plataformas
PUT {{baseUrl}}/api/v1/services/{{createMobileService.response.body.id}}
Authorization: {{authToken}}
Content-Type: application/json

{
  "title": "Desarrollo Multiplataforma Avanzado",
  "description": "Desarrollo de apps para iOS, Android, Web y Desktop usando React Native y Flutter",
  "price": 599.99,
  "category": "TECHNOLOGY",
  "providerId": "550e8400-e29b-41d4-a716-446655440002", 
  "isActive": true,
  "averageRating": 4.9
}

###

### 13. Verificar servicios despu√©s de actualizaciones
GET {{baseUrl}}/api/v1/services
Authorization: {{authToken}}
Content-Type: application/json

###

#########################################################################
# SECCI√ìN 6: CASOS DE PRUEBA CON DIFERENTES DATOS
#########################################################################

### 14. Crear servicio con datos m√≠nimos
# @name createMinimalService
POST {{baseUrl}}/api/v1/services
Authorization: {{authToken}}
Content-Type: application/json

{
  "title": "Servicio B√°sico",
  "description": "Servicio con informaci√≥n m√≠nima requerida"
}

###

### 15. Crear servicio con datos completos
# @name createCompleteService
POST {{baseUrl}}/api/v1/services
Authorization: {{authToken}}
Content-Type: application/json

{
  "title": "Servicio Premium Completo",
  "description": "Servicio con todos los campos disponibles y caracter√≠sticas premium",
  "price": 999.99,
  "category": "PREMIUM",
  "providerId": "550e8400-e29b-41d4-a716-446655440004",
  "isActive": true,
  "averageRating": 5.0
}

###

### 16. Verificar servicios con diferentes configuraciones
GET {{baseUrl}}/api/v1/services
Authorization: {{authToken}}
Content-Type: application/json

###

#########################################################################
# SECCI√ìN 7: ELIMINAR SERVICIOS
#########################################################################

### 17. Eliminar servicio de consultor√≠a
DELETE {{baseUrl}}/api/v1/services/{{createConsultingService.response.body.id}}
Authorization: {{authToken}}

###

### 18. Eliminar servicio m√≠nimo
DELETE {{baseUrl}}/api/v1/services/{{createMinimalService.response.body.id}}
Authorization: {{authToken}}

###

### 19. Verificar servicios despu√©s de eliminaciones
GET {{baseUrl}}/api/v1/services
Authorization: {{authToken}}
Content-Type: application/json

###

### 20. Intentar obtener servicio eliminado (debe retornar 404)
GET {{baseUrl}}/api/v1/services/{{createConsultingService.response.body.id}}
Authorization: {{authToken}}
Content-Type: application/json

###

#########################################################################
# SECCI√ìN 8: PRUEBAS DE ERRORES Y CASOS L√çMITE
#########################################################################

### 21. Crear servicio sin autenticaci√≥n (debe fallar)
POST {{baseUrl}}/api/v1/services
Content-Type: application/json

{
  "title": "Servicio No Autorizado",
  "description": "Este servicio no deber√≠a crearse sin token",
  "price": 100.00
}

###

### 22. Crear servicio con token inv√°lido (debe fallar)
POST {{baseUrl}}/api/v1/services
Authorization: Bearer token-invalido-aqui
Content-Type: application/json

{
  "title": "Servicio con Token Inv√°lido",
  "description": "Este servicio no deber√≠a crearse con token inv√°lido",
  "price": 100.00
}

###

### 23. Crear servicio con JSON malformado (debe fallar)
POST {{baseUrl}}/api/v1/services
Authorization: {{authToken}}
Content-Type: application/json

{
  "title": "Servicio Malformado"
  "description": "Falta coma arriba"
  "price": "no-es-numero"
}

###

### 24. Actualizar servicio inexistente (debe retornar 404)
PUT {{baseUrl}}/api/v1/services/00000000-0000-0000-0000-000000000000
Authorization: {{authToken}}
Content-Type: application/json

{
  "title": "Servicio Inexistente",
  "description": "Este servicio no existe"
}

###

### 25. Eliminar servicio inexistente (debe retornar 404)
DELETE {{baseUrl}}/api/v1/services/00000000-0000-0000-0000-000000000000
Authorization: {{authToken}}

###

#########################################################################
# SECCI√ìN 9: VERIFICACI√ìN FINAL Y KAFKA EVENTS
#########################################################################

### 26. Estado final del marketplace
# @name finalServicesList
GET {{baseUrl}}/api/v1/services
Authorization: {{authToken}}
Content-Type: application/json

###

### 27. Verificaci√≥n final de salud
GET {{baseUrl}}/api/v1/services/health
Authorization: {{authToken}}
Content-Type: application/json

###

#########################################################################
# NOTAS IMPORTANTES:
#########################################################################
# 
# ‚úÖ Todos los endpoints ahora funcionan sin restricciones de roles
# ‚úÖ Se publican eventos de Kafka para CREATED, UPDATED, DELETED
# ‚úÖ Monitorear Kafka UI: http://localhost:8090/ui/clusters/local/all-topics
# ‚úÖ Buscar eventos en el topic: marketplace.service.events
# ‚úÖ Los tokens tienen 5 minutos de validez (expires_in: 300)
# 
# üîç Para debugging:
# - Revisar logs del microservicio para eventos de Kafka
# - Verificar que Eureka muestre el servicio registrado: http://localhost:8761
# - Consultar Kafka UI para ver los eventos publicados
# 
# üöÄ Flujo recomendado:
# 1. Ejecutar autenticaci√≥n (PASO 1)
# 2. Verificar salud (SECCI√ìN 2)
# 3. Crear servicios (SECCI√ìN 3)
# 4. Probar CRUD completo (SECCIONES 4-7)
# 5. Verificar eventos en Kafka UI
###